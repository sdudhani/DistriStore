//pkg/gfs/gfs.proto

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v3.19.1
// source: pkg/gfs/gfs.proto

package gfs

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type StoreChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkHandle   string                 `protobuf:"bytes,1,opt,name=chunk_handle,json=chunkHandle,proto3" json:"chunk_handle,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreChunkRequest) Reset() {
	*x = StoreChunkRequest{}
	mi := &file_pkg_gfs_gfs_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreChunkRequest) ProtoMessage() {}

func (x *StoreChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gfs_gfs_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreChunkRequest.ProtoReflect.Descriptor instead.
func (*StoreChunkRequest) Descriptor() ([]byte, []int) {
	return file_pkg_gfs_gfs_proto_rawDescGZIP(), []int{0}
}

func (x *StoreChunkRequest) GetChunkHandle() string {
	if x != nil {
		return x.ChunkHandle
	}
	return ""
}

func (x *StoreChunkRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type StoreChunkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StoreChunkResponse) Reset() {
	*x = StoreChunkResponse{}
	mi := &file_pkg_gfs_gfs_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StoreChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StoreChunkResponse) ProtoMessage() {}

func (x *StoreChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gfs_gfs_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StoreChunkResponse.ProtoReflect.Descriptor instead.
func (*StoreChunkResponse) Descriptor() ([]byte, []int) {
	return file_pkg_gfs_gfs_proto_rawDescGZIP(), []int{1}
}

func (x *StoreChunkResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StoreChunkResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type RetrieveChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkHandle   string                 `protobuf:"bytes,1,opt,name=chunk_handle,json=chunkHandle,proto3" json:"chunk_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetrieveChunkRequest) Reset() {
	*x = RetrieveChunkRequest{}
	mi := &file_pkg_gfs_gfs_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetrieveChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveChunkRequest) ProtoMessage() {}

func (x *RetrieveChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gfs_gfs_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveChunkRequest.ProtoReflect.Descriptor instead.
func (*RetrieveChunkRequest) Descriptor() ([]byte, []int) {
	return file_pkg_gfs_gfs_proto_rawDescGZIP(), []int{2}
}

func (x *RetrieveChunkRequest) GetChunkHandle() string {
	if x != nil {
		return x.ChunkHandle
	}
	return ""
}

type RetrieveChunkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetrieveChunkResponse) Reset() {
	*x = RetrieveChunkResponse{}
	mi := &file_pkg_gfs_gfs_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetrieveChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetrieveChunkResponse) ProtoMessage() {}

func (x *RetrieveChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gfs_gfs_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetrieveChunkResponse.ProtoReflect.Descriptor instead.
func (*RetrieveChunkResponse) Descriptor() ([]byte, []int) {
	return file_pkg_gfs_gfs_proto_rawDescGZIP(), []int{3}
}

func (x *RetrieveChunkResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RetrieveChunkResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *RetrieveChunkResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteChunkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkHandle   string                 `protobuf:"bytes,1,opt,name=chunk_handle,json=chunkHandle,proto3" json:"chunk_handle,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteChunkRequest) Reset() {
	*x = DeleteChunkRequest{}
	mi := &file_pkg_gfs_gfs_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteChunkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChunkRequest) ProtoMessage() {}

func (x *DeleteChunkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gfs_gfs_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChunkRequest.ProtoReflect.Descriptor instead.
func (*DeleteChunkRequest) Descriptor() ([]byte, []int) {
	return file_pkg_gfs_gfs_proto_rawDescGZIP(), []int{4}
}

func (x *DeleteChunkRequest) GetChunkHandle() string {
	if x != nil {
		return x.ChunkHandle
	}
	return ""
}

type DeleteChunkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteChunkResponse) Reset() {
	*x = DeleteChunkResponse{}
	mi := &file_pkg_gfs_gfs_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteChunkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteChunkResponse) ProtoMessage() {}

func (x *DeleteChunkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gfs_gfs_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteChunkResponse.ProtoReflect.Descriptor instead.
func (*DeleteChunkResponse) Descriptor() ([]byte, []int) {
	return file_pkg_gfs_gfs_proto_rawDescGZIP(), []int{5}
}

func (x *DeleteChunkResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteChunkResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type UploadFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileRequest) Reset() {
	*x = UploadFileRequest{}
	mi := &file_pkg_gfs_gfs_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileRequest) ProtoMessage() {}

func (x *UploadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gfs_gfs_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileRequest.ProtoReflect.Descriptor instead.
func (*UploadFileRequest) Descriptor() ([]byte, []int) {
	return file_pkg_gfs_gfs_proto_rawDescGZIP(), []int{6}
}

func (x *UploadFileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *UploadFileRequest) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

type UploadFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadFileResponse) Reset() {
	*x = UploadFileResponse{}
	mi := &file_pkg_gfs_gfs_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadFileResponse) ProtoMessage() {}

func (x *UploadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gfs_gfs_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadFileResponse.ProtoReflect.Descriptor instead.
func (*UploadFileResponse) Descriptor() ([]byte, []int) {
	return file_pkg_gfs_gfs_proto_rawDescGZIP(), []int{7}
}

func (x *UploadFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UploadFileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DownloadFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadFileRequest) Reset() {
	*x = DownloadFileRequest{}
	mi := &file_pkg_gfs_gfs_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileRequest) ProtoMessage() {}

func (x *DownloadFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gfs_gfs_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileRequest.ProtoReflect.Descriptor instead.
func (*DownloadFileRequest) Descriptor() ([]byte, []int) {
	return file_pkg_gfs_gfs_proto_rawDescGZIP(), []int{8}
}

func (x *DownloadFileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type DownloadFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DownloadFileResponse) Reset() {
	*x = DownloadFileResponse{}
	mi := &file_pkg_gfs_gfs_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DownloadFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DownloadFileResponse) ProtoMessage() {}

func (x *DownloadFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gfs_gfs_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DownloadFileResponse.ProtoReflect.Descriptor instead.
func (*DownloadFileResponse) Descriptor() ([]byte, []int) {
	return file_pkg_gfs_gfs_proto_rawDescGZIP(), []int{9}
}

func (x *DownloadFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DownloadFileResponse) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *DownloadFileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type ListFilesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Path          string                 `protobuf:"bytes,1,opt,name=path,proto3" json:"path,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFilesRequest) Reset() {
	*x = ListFilesRequest{}
	mi := &file_pkg_gfs_gfs_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFilesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesRequest) ProtoMessage() {}

func (x *ListFilesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gfs_gfs_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesRequest.ProtoReflect.Descriptor instead.
func (*ListFilesRequest) Descriptor() ([]byte, []int) {
	return file_pkg_gfs_gfs_proto_rawDescGZIP(), []int{10}
}

func (x *ListFilesRequest) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

type ListFilesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Files         []string               `protobuf:"bytes,2,rep,name=files,proto3" json:"files,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListFilesResponse) Reset() {
	*x = ListFilesResponse{}
	mi := &file_pkg_gfs_gfs_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListFilesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFilesResponse) ProtoMessage() {}

func (x *ListFilesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gfs_gfs_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFilesResponse.ProtoReflect.Descriptor instead.
func (*ListFilesResponse) Descriptor() ([]byte, []int) {
	return file_pkg_gfs_gfs_proto_rawDescGZIP(), []int{11}
}

func (x *ListFilesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListFilesResponse) GetFiles() []string {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *ListFilesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type DeleteFileRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileRequest) Reset() {
	*x = DeleteFileRequest{}
	mi := &file_pkg_gfs_gfs_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileRequest) ProtoMessage() {}

func (x *DeleteFileRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gfs_gfs_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileRequest.ProtoReflect.Descriptor instead.
func (*DeleteFileRequest) Descriptor() ([]byte, []int) {
	return file_pkg_gfs_gfs_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteFileRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

type DeleteFileResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteFileResponse) Reset() {
	*x = DeleteFileResponse{}
	mi := &file_pkg_gfs_gfs_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteFileResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteFileResponse) ProtoMessage() {}

func (x *DeleteFileResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gfs_gfs_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteFileResponse.ProtoReflect.Descriptor instead.
func (*DeleteFileResponse) Descriptor() ([]byte, []int) {
	return file_pkg_gfs_gfs_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteFileResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteFileResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type GetChunkLocationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Filename      string                 `protobuf:"bytes,1,opt,name=filename,proto3" json:"filename,omitempty"`
	ChunkIndex    int32                  `protobuf:"varint,2,opt,name=chunk_index,json=chunkIndex,proto3" json:"chunk_index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetChunkLocationsRequest) Reset() {
	*x = GetChunkLocationsRequest{}
	mi := &file_pkg_gfs_gfs_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChunkLocationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChunkLocationsRequest) ProtoMessage() {}

func (x *GetChunkLocationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gfs_gfs_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChunkLocationsRequest.ProtoReflect.Descriptor instead.
func (*GetChunkLocationsRequest) Descriptor() ([]byte, []int) {
	return file_pkg_gfs_gfs_proto_rawDescGZIP(), []int{14}
}

func (x *GetChunkLocationsRequest) GetFilename() string {
	if x != nil {
		return x.Filename
	}
	return ""
}

func (x *GetChunkLocationsRequest) GetChunkIndex() int32 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

type GetChunkLocationsResponse struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	ChunkserverAddresses []string               `protobuf:"bytes,1,rep,name=chunkserver_addresses,json=chunkserverAddresses,proto3" json:"chunkserver_addresses,omitempty"`
	ChunkHandle          string                 `protobuf:"bytes,2,opt,name=chunk_handle,json=chunkHandle,proto3" json:"chunk_handle,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *GetChunkLocationsResponse) Reset() {
	*x = GetChunkLocationsResponse{}
	mi := &file_pkg_gfs_gfs_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetChunkLocationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChunkLocationsResponse) ProtoMessage() {}

func (x *GetChunkLocationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gfs_gfs_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChunkLocationsResponse.ProtoReflect.Descriptor instead.
func (*GetChunkLocationsResponse) Descriptor() ([]byte, []int) {
	return file_pkg_gfs_gfs_proto_rawDescGZIP(), []int{15}
}

func (x *GetChunkLocationsResponse) GetChunkserverAddresses() []string {
	if x != nil {
		return x.ChunkserverAddresses
	}
	return nil
}

func (x *GetChunkLocationsResponse) GetChunkHandle() string {
	if x != nil {
		return x.ChunkHandle
	}
	return ""
}

type HeartbeatRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkserverId string                 `protobuf:"bytes,1,opt,name=chunkserver_id,json=chunkserverId,proto3" json:"chunkserver_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_pkg_gfs_gfs_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gfs_gfs_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_pkg_gfs_gfs_proto_rawDescGZIP(), []int{16}
}

func (x *HeartbeatRequest) GetChunkserverId() string {
	if x != nil {
		return x.ChunkserverId
	}
	return ""
}

type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_pkg_gfs_gfs_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_pkg_gfs_gfs_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_pkg_gfs_gfs_proto_rawDescGZIP(), []int{17}
}

func (x *HeartbeatResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

var File_pkg_gfs_gfs_proto protoreflect.FileDescriptor

const file_pkg_gfs_gfs_proto_rawDesc = "" +
	"\n" +
	"\x11pkg/gfs/gfs.proto\x12\x03gfs\"J\n" +
	"\x11StoreChunkRequest\x12!\n" +
	"\fchunk_handle\x18\x01 \x01(\tR\vchunkHandle\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"H\n" +
	"\x12StoreChunkResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"9\n" +
	"\x14RetrieveChunkRequest\x12!\n" +
	"\fchunk_handle\x18\x01 \x01(\tR\vchunkHandle\"_\n" +
	"\x15RetrieveChunkResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"7\n" +
	"\x12DeleteChunkRequest\x12!\n" +
	"\fchunk_handle\x18\x01 \x01(\tR\vchunkHandle\"I\n" +
	"\x13DeleteChunkResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"C\n" +
	"\x11UploadFileRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\"H\n" +
	"\x12UploadFileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"1\n" +
	"\x13DownloadFileRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\"^\n" +
	"\x14DownloadFileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"&\n" +
	"\x10ListFilesRequest\x12\x12\n" +
	"\x04path\x18\x01 \x01(\tR\x04path\"]\n" +
	"\x11ListFilesResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x14\n" +
	"\x05files\x18\x02 \x03(\tR\x05files\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\"/\n" +
	"\x11DeleteFileRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\"H\n" +
	"\x12DeleteFileResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"W\n" +
	"\x18GetChunkLocationsRequest\x12\x1a\n" +
	"\bfilename\x18\x01 \x01(\tR\bfilename\x12\x1f\n" +
	"\vchunk_index\x18\x02 \x01(\x05R\n" +
	"chunkIndex\"s\n" +
	"\x19GetChunkLocationsResponse\x123\n" +
	"\x15chunkserver_addresses\x18\x01 \x03(\tR\x14chunkserverAddresses\x12!\n" +
	"\fchunk_handle\x18\x02 \x01(\tR\vchunkHandle\"9\n" +
	"\x10HeartbeatRequest\x12%\n" +
	"\x0echunkserver_id\x18\x01 \x01(\tR\rchunkserverId\"-\n" +
	"\x11HeartbeatResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage2\x99\x03\n" +
	"\x06Master\x12<\n" +
	"\tHeartbeat\x12\x15.gfs.HeartbeatRequest\x1a\x16.gfs.HeartbeatResponse\"\x00\x12=\n" +
	"\n" +
	"UploadFile\x12\x16.gfs.UploadFileRequest\x1a\x17.gfs.UploadFileResponse\x12C\n" +
	"\fDownloadFile\x12\x18.gfs.DownloadFileRequest\x1a\x19.gfs.DownloadFileResponse\x12:\n" +
	"\tListFiles\x12\x15.gfs.ListFilesRequest\x1a\x16.gfs.ListFilesResponse\x12=\n" +
	"\n" +
	"DeleteFile\x12\x16.gfs.DeleteFileRequest\x1a\x17.gfs.DeleteFileResponse\x12R\n" +
	"\x11GetChunkLocations\x12\x1d.gfs.GetChunkLocationsRequest\x1a\x1e.gfs.GetChunkLocationsResponse2\xd6\x01\n" +
	"\vChunkserver\x12=\n" +
	"\n" +
	"StoreChunk\x12\x16.gfs.StoreChunkRequest\x1a\x17.gfs.StoreChunkResponse\x12F\n" +
	"\rRetrieveChunk\x12\x19.gfs.RetrieveChunkRequest\x1a\x1a.gfs.RetrieveChunkResponse\x12@\n" +
	"\vDeleteChunk\x12\x17.gfs.DeleteChunkRequest\x1a\x18.gfs.DeleteChunkResponseB#Z!github.com/sdudhani/godfs/pkg/gfsb\x06proto3"

var (
	file_pkg_gfs_gfs_proto_rawDescOnce sync.Once
	file_pkg_gfs_gfs_proto_rawDescData []byte
)

func file_pkg_gfs_gfs_proto_rawDescGZIP() []byte {
	file_pkg_gfs_gfs_proto_rawDescOnce.Do(func() {
		file_pkg_gfs_gfs_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_pkg_gfs_gfs_proto_rawDesc), len(file_pkg_gfs_gfs_proto_rawDesc)))
	})
	return file_pkg_gfs_gfs_proto_rawDescData
}

var file_pkg_gfs_gfs_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_pkg_gfs_gfs_proto_goTypes = []any{
	(*StoreChunkRequest)(nil),         // 0: gfs.StoreChunkRequest
	(*StoreChunkResponse)(nil),        // 1: gfs.StoreChunkResponse
	(*RetrieveChunkRequest)(nil),      // 2: gfs.RetrieveChunkRequest
	(*RetrieveChunkResponse)(nil),     // 3: gfs.RetrieveChunkResponse
	(*DeleteChunkRequest)(nil),        // 4: gfs.DeleteChunkRequest
	(*DeleteChunkResponse)(nil),       // 5: gfs.DeleteChunkResponse
	(*UploadFileRequest)(nil),         // 6: gfs.UploadFileRequest
	(*UploadFileResponse)(nil),        // 7: gfs.UploadFileResponse
	(*DownloadFileRequest)(nil),       // 8: gfs.DownloadFileRequest
	(*DownloadFileResponse)(nil),      // 9: gfs.DownloadFileResponse
	(*ListFilesRequest)(nil),          // 10: gfs.ListFilesRequest
	(*ListFilesResponse)(nil),         // 11: gfs.ListFilesResponse
	(*DeleteFileRequest)(nil),         // 12: gfs.DeleteFileRequest
	(*DeleteFileResponse)(nil),        // 13: gfs.DeleteFileResponse
	(*GetChunkLocationsRequest)(nil),  // 14: gfs.GetChunkLocationsRequest
	(*GetChunkLocationsResponse)(nil), // 15: gfs.GetChunkLocationsResponse
	(*HeartbeatRequest)(nil),          // 16: gfs.HeartbeatRequest
	(*HeartbeatResponse)(nil),         // 17: gfs.HeartbeatResponse
}
var file_pkg_gfs_gfs_proto_depIdxs = []int32{
	16, // 0: gfs.Master.Heartbeat:input_type -> gfs.HeartbeatRequest
	6,  // 1: gfs.Master.UploadFile:input_type -> gfs.UploadFileRequest
	8,  // 2: gfs.Master.DownloadFile:input_type -> gfs.DownloadFileRequest
	10, // 3: gfs.Master.ListFiles:input_type -> gfs.ListFilesRequest
	12, // 4: gfs.Master.DeleteFile:input_type -> gfs.DeleteFileRequest
	14, // 5: gfs.Master.GetChunkLocations:input_type -> gfs.GetChunkLocationsRequest
	0,  // 6: gfs.Chunkserver.StoreChunk:input_type -> gfs.StoreChunkRequest
	2,  // 7: gfs.Chunkserver.RetrieveChunk:input_type -> gfs.RetrieveChunkRequest
	4,  // 8: gfs.Chunkserver.DeleteChunk:input_type -> gfs.DeleteChunkRequest
	17, // 9: gfs.Master.Heartbeat:output_type -> gfs.HeartbeatResponse
	7,  // 10: gfs.Master.UploadFile:output_type -> gfs.UploadFileResponse
	9,  // 11: gfs.Master.DownloadFile:output_type -> gfs.DownloadFileResponse
	11, // 12: gfs.Master.ListFiles:output_type -> gfs.ListFilesResponse
	13, // 13: gfs.Master.DeleteFile:output_type -> gfs.DeleteFileResponse
	15, // 14: gfs.Master.GetChunkLocations:output_type -> gfs.GetChunkLocationsResponse
	1,  // 15: gfs.Chunkserver.StoreChunk:output_type -> gfs.StoreChunkResponse
	3,  // 16: gfs.Chunkserver.RetrieveChunk:output_type -> gfs.RetrieveChunkResponse
	5,  // 17: gfs.Chunkserver.DeleteChunk:output_type -> gfs.DeleteChunkResponse
	9,  // [9:18] is the sub-list for method output_type
	0,  // [0:9] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_pkg_gfs_gfs_proto_init() }
func file_pkg_gfs_gfs_proto_init() {
	if File_pkg_gfs_gfs_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_pkg_gfs_gfs_proto_rawDesc), len(file_pkg_gfs_gfs_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   2,
		},
		GoTypes:           file_pkg_gfs_gfs_proto_goTypes,
		DependencyIndexes: file_pkg_gfs_gfs_proto_depIdxs,
		MessageInfos:      file_pkg_gfs_gfs_proto_msgTypes,
	}.Build()
	File_pkg_gfs_gfs_proto = out.File
	file_pkg_gfs_gfs_proto_goTypes = nil
	file_pkg_gfs_gfs_proto_depIdxs = nil
}
